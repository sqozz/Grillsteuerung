   1               		.file	"at90can_get_message.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               	.global	at90can_copy_mob_to_message
  12               	at90can_copy_mob_to_message:
  13               	.LFB18:
  14               		.file 1 "at90can_get_message.c"
   1:at90can_get_message.c **** // ----------------------------------------------------------------------------
   2:at90can_get_message.c **** /*
   3:at90can_get_message.c ****  * Copyright (c) 2007 Fabian Greif, Roboterclub Aachen e.V.
   4:at90can_get_message.c ****  *  All rights reserved.
   5:at90can_get_message.c ****  *
   6:at90can_get_message.c ****  * Redistribution and use in source and binary forms, with or without
   7:at90can_get_message.c ****  * modification, are permitted provided that the following conditions
   8:at90can_get_message.c ****  * are met:
   9:at90can_get_message.c ****  * 1. Redistributions of source code must retain the above copyright
  10:at90can_get_message.c ****  *    notice, this list of conditions and the following disclaimer.
  11:at90can_get_message.c ****  * 2. Redistributions in binary form must reproduce the above copyright
  12:at90can_get_message.c ****  *    notice, this list of conditions and the following disclaimer in the
  13:at90can_get_message.c ****  *    documentation and/or other materials provided with the distribution.
  14:at90can_get_message.c ****  *
  15:at90can_get_message.c ****  * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
  16:at90can_get_message.c ****  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  17:at90can_get_message.c ****  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  18:at90can_get_message.c ****  * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
  19:at90can_get_message.c ****  * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  20:at90can_get_message.c ****  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
  21:at90can_get_message.c ****  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  22:at90can_get_message.c ****  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  23:at90can_get_message.c ****  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
  24:at90can_get_message.c ****  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
  25:at90can_get_message.c ****  * SUCH DAMAGE.
  26:at90can_get_message.c ****  *
  27:at90can_get_message.c ****  * $Id: at90can_get_message.c 7224 2009-01-25 20:19:32Z fabian $
  28:at90can_get_message.c ****  */
  29:at90can_get_message.c **** // ----------------------------------------------------------------------------
  30:at90can_get_message.c **** 
  31:at90can_get_message.c **** #include "at90can_private.h"
  32:at90can_get_message.c **** #ifdef	SUPPORT_FOR_AT90CAN__
  33:at90can_get_message.c **** 
  34:at90can_get_message.c **** void at90can_copy_mob_to_message(can_t *msg)
  35:at90can_get_message.c **** {
  15               		.loc 1 35 0
  16               		.cfi_startproc
  17               	.LVL0:
  18 0000 CF93      		push r28
  19               	.LCFI0:
  20               		.cfi_def_cfa_offset 3
  21               		.cfi_offset 28, -2
  22 0002 DF93      		push r29
  23               	.LCFI1:
  24               		.cfi_def_cfa_offset 4
  25               		.cfi_offset 29, -3
  26 0004 00D0      		rcall .
  27 0006 00D0      		rcall .
  28               	.LCFI2:
  29               		.cfi_def_cfa_offset 8
  30 0008 CDB7      		in r28,__SP_L__
  31 000a DEB7      		in r29,__SP_H__
  32               	.LCFI3:
  33               		.cfi_def_cfa_register 28
  34               	/* prologue: function */
  35               	/* frame size = 4 */
  36               	/* stack size = 6 */
  37               	.L__stack_usage = 6
  38 000c FC01      		movw r30,r24
  36:at90can_get_message.c **** 	// read status
  37:at90can_get_message.c **** 	uint8_t cancdmob = CANCDMOB;
  39               		.loc 1 37 0
  40 000e 8091 EF00 		lds r24,239
  41               	.LVL1:
  38:at90can_get_message.c **** 	
  39:at90can_get_message.c **** 	// read length
  40:at90can_get_message.c **** 	msg->length = cancdmob & 0x0f;
  42               		.loc 1 40 0
  43 0012 982F      		mov r25,r24
  44 0014 9F70      		andi r25,lo8(15)
  45 0016 9583      		std Z+5,r25
  46 0018 9481      		ldd r25,Z+4
  41:at90can_get_message.c **** 	
  42:at90can_get_message.c **** 	#if SUPPORT_EXTENDED_CANID
  43:at90can_get_message.c **** 	
  44:at90can_get_message.c **** 	if (cancdmob & (1 << IDE))
  47               		.loc 1 44 0
  48 001a 84FF      		sbrs r24,4
  49 001c 00C0      		rjmp .L2
  50               	.LVL2:
  51               	.LBB2:
  45:at90can_get_message.c **** 	{
  46:at90can_get_message.c **** 		// extended identifier
  47:at90can_get_message.c **** 		uint32_t tmp;
  48:at90can_get_message.c **** 		uint8_t *ptr = (uint8_t *) &tmp;
  49:at90can_get_message.c **** 		
  50:at90can_get_message.c **** 		*ptr       = CANIDT4;
  52               		.loc 1 50 0
  53 001e 8091 F000 		lds r24,240
  54               	.LVL3:
  55 0022 8983      		std Y+1,r24
  51:at90can_get_message.c **** 		*(ptr + 1) = CANIDT3;
  56               		.loc 1 51 0
  57 0024 8091 F100 		lds r24,241
  58 0028 8A83      		std Y+2,r24
  52:at90can_get_message.c **** 		*(ptr + 2) = CANIDT2;
  59               		.loc 1 52 0
  60 002a 8091 F200 		lds r24,242
  61 002e 8B83      		std Y+3,r24
  53:at90can_get_message.c **** 		*(ptr + 3) = CANIDT1;
  62               		.loc 1 53 0
  63 0030 8091 F300 		lds r24,243
  64 0034 8C83      		std Y+4,r24
  54:at90can_get_message.c **** 		
  55:at90can_get_message.c **** 		msg->id = tmp >> 3;
  65               		.loc 1 55 0
  66 0036 4981      		ldd r20,Y+1
  67 0038 5A81      		ldd r21,Y+2
  68 003a 6B81      		ldd r22,Y+3
  69 003c 7C81      		ldd r23,Y+4
  70 003e 83E0      		ldi r24,3
  71               		1:
  72 0040 7695      		lsr r23
  73 0042 6795      		ror r22
  74 0044 5795      		ror r21
  75 0046 4795      		ror r20
  76 0048 8A95      		dec r24
  77 004a 01F4      		brne 1b
  78 004c 4083      		st Z,r20
  79 004e 5183      		std Z+1,r21
  80 0050 6283      		std Z+2,r22
  81 0052 7383      		std Z+3,r23
  56:at90can_get_message.c **** 		
  57:at90can_get_message.c **** 		/* equivalent to:
  58:at90can_get_message.c **** 		msg->id  = (uint8_t)  CANIDT4 >> 3;
  59:at90can_get_message.c **** 		msg->id |= (uint32_t) CANIDT3 << 5;
  60:at90can_get_message.c **** 		msg->id |= (uint32_t) CANIDT2 << 13;
  61:at90can_get_message.c **** 		msg->id |= (uint32_t) CANIDT1 << 21;
  62:at90can_get_message.c **** 		*/
  63:at90can_get_message.c **** 		
  64:at90can_get_message.c **** 		msg->flags.extended = 1;
  82               		.loc 1 64 0
  83 0054 9260      		ori r25,lo8(1<<1)
  84 0056 9483      		std Z+4,r25
  85               	.LBE2:
  86 0058 00C0      		rjmp .L3
  87               	.LVL4:
  88               	.L2:
  89               	.LBB3:
  65:at90can_get_message.c **** 	}
  66:at90can_get_message.c **** 	else
  67:at90can_get_message.c **** 	{
  68:at90can_get_message.c **** 		// standard identifier
  69:at90can_get_message.c **** 		uint16_t id;
  70:at90can_get_message.c **** 		
  71:at90can_get_message.c **** 		id  = (uint8_t)  CANIDT2 >> 5;
  90               		.loc 1 71 0
  91 005a 8091 F200 		lds r24,242
  92               	.LVL5:
  93 005e 8295      		swap r24
  94 0060 8695      		lsr r24
  95 0062 8770      		andi r24,lo8(7)
  96               	.LVL6:
  72:at90can_get_message.c **** 		id |= (uint16_t) CANIDT1 << 3;
  97               		.loc 1 72 0
  98 0064 4091 F300 		lds r20,243
  99               	.LVL7:
 100 0068 28E0      		ldi r18,lo8(8)
 101 006a 429F      		mul r20,r18
 102 006c A001      		movw r20,r0
 103 006e 1124      		clr __zero_reg__
 104               	.LVL8:
 105 0070 482B      		or r20,r24
  73:at90can_get_message.c **** 		
  74:at90can_get_message.c **** 		msg->id = (uint32_t) id;
 106               		.loc 1 74 0
 107 0072 60E0      		ldi r22,0
 108 0074 70E0      		ldi r23,0
 109 0076 4083      		st Z,r20
 110 0078 5183      		std Z+1,r21
 111 007a 6283      		std Z+2,r22
 112 007c 7383      		std Z+3,r23
  75:at90can_get_message.c **** 		msg->flags.extended = 0;
 113               		.loc 1 75 0
 114 007e 892F      		mov r24,r25
 115 0080 8D7F      		andi r24,lo8(~(1<<1))
 116 0082 8483      		std Z+4,r24
 117               	.L3:
 118               	.LBE3:
  76:at90can_get_message.c **** 	}
  77:at90can_get_message.c **** 	
  78:at90can_get_message.c **** 	#else
  79:at90can_get_message.c **** 	
  80:at90can_get_message.c **** 	if (cancdmob & (1 << IDE))
  81:at90can_get_message.c **** 	{
  82:at90can_get_message.c **** 		// mark message as processed
  83:at90can_get_message.c **** 		ENTER_CRITICAL_SECTION;
  84:at90can_get_message.c **** 		_messages_waiting--;
  85:at90can_get_message.c **** 		LEAVE_CRITICAL_SECTION;
  86:at90can_get_message.c **** 		
  87:at90can_get_message.c **** 		// clear flags
  88:at90can_get_message.c **** 		CANCDMOB = (1 << CONMOB1);
  89:at90can_get_message.c **** 		
  90:at90can_get_message.c **** 		return 0;
  91:at90can_get_message.c **** 	}
  92:at90can_get_message.c **** 	else
  93:at90can_get_message.c **** 	{
  94:at90can_get_message.c **** 		// standard identifier
  95:at90can_get_message.c **** 		msg->id  = (uint8_t)  CANIDT2 >> 5;
  96:at90can_get_message.c **** 		msg->id |= (uint16_t) CANIDT1 << 3;
  97:at90can_get_message.c **** 	}
  98:at90can_get_message.c **** 	
  99:at90can_get_message.c **** 	#endif
 100:at90can_get_message.c **** 	
 101:at90can_get_message.c **** 	if (CANIDT4 & (1 << RTRTAG)) {
 119               		.loc 1 101 0
 120 0084 9091 F000 		lds r25,240
 121 0088 8481      		ldd r24,Z+4
 122 008a 92FF      		sbrs r25,2
 123 008c 00C0      		rjmp .L4
 102:at90can_get_message.c **** 		msg->flags.rtr = 1;
 124               		.loc 1 102 0
 125 008e 8160      		ori r24,lo8(1<<0)
 126 0090 8483      		std Z+4,r24
 127 0092 00C0      		rjmp .L5
 128               	.L4:
 129               	.LBB4:
 103:at90can_get_message.c **** 	}
 104:at90can_get_message.c **** 	else {
 105:at90can_get_message.c **** 		msg->flags.rtr = 0;
 130               		.loc 1 105 0
 131 0094 8E7F      		andi r24,lo8(~(1<<0))
 132 0096 8483      		std Z+4,r24
 133               	.LVL9:
 106:at90can_get_message.c **** 		
 107:at90can_get_message.c **** 		// read data
 108:at90can_get_message.c **** 		uint8_t *p = msg->data;
 134               		.loc 1 108 0
 135 0098 CF01      		movw r24,r30
 136 009a 0696      		adiw r24,6
 137               	.LVL10:
 138               	.LBB5:
 109:at90can_get_message.c **** 		for (uint8_t i = 0;i < msg->length;i++) {
 139               		.loc 1 109 0
 140 009c DC01      		movw r26,r24
 141               	.LVL11:
 142               	.L6:
 143               		.loc 1 109 0 is_stmt 0 discriminator 1
 144 009e 2581      		ldd r18,Z+5
 145 00a0 3A2F      		mov r19,r26
 146 00a2 381B      		sub r19,r24
 147 00a4 3217      		cp r19,r18
 148 00a6 00F4      		brsh .L5
 149               	.LVL12:
 110:at90can_get_message.c **** 			*p++ = CANMSG;
 150               		.loc 1 110 0 is_stmt 1 discriminator 2
 151 00a8 2091 FA00 		lds r18,250
 152 00ac 2D93      		st X+,r18
 153               	.LVL13:
 154 00ae 00C0      		rjmp .L6
 155               	.LVL14:
 156               	.L5:
 157               	.LBE5:
 158               	.LBE4:
 111:at90can_get_message.c **** 		}
 112:at90can_get_message.c **** 	}
 113:at90can_get_message.c **** 	
 114:at90can_get_message.c **** 	#if SUPPORT_TIMESTAMPS
 115:at90can_get_message.c **** 	msg->timestamp = CANSTM;
 159               		.loc 1 115 0
 160 00b0 8091 F800 		lds r24,248
 161 00b4 9091 F900 		lds r25,248+1
 162 00b8 9787      		std Z+15,r25
 163 00ba 8687      		std Z+14,r24
 164               	/* epilogue start */
 116:at90can_get_message.c **** 	#endif
 117:at90can_get_message.c **** }
 165               		.loc 1 117 0
 166 00bc 0F90      		pop __tmp_reg__
 167 00be 0F90      		pop __tmp_reg__
 168 00c0 0F90      		pop __tmp_reg__
 169 00c2 0F90      		pop __tmp_reg__
 170 00c4 DF91      		pop r29
 171 00c6 CF91      		pop r28
 172 00c8 0895      		ret
 173               		.cfi_endproc
 174               	.LFE18:
 176               	.global	at90can_get_message
 178               	at90can_get_message:
 179               	.LFB19:
 118:at90can_get_message.c **** 
 119:at90can_get_message.c **** // ----------------------------------------------------------------------------
 120:at90can_get_message.c **** 
 121:at90can_get_message.c **** uint8_t at90can_get_message(can_t *msg)
 122:at90can_get_message.c **** {
 180               		.loc 1 122 0
 181               		.cfi_startproc
 182               	.LVL15:
 183 00ca 0F93      		push r16
 184               	.LCFI4:
 185               		.cfi_def_cfa_offset 3
 186               		.cfi_offset 16, -2
 187 00cc 1F93      		push r17
 188               	.LCFI5:
 189               		.cfi_def_cfa_offset 4
 190               		.cfi_offset 17, -3
 191 00ce CF93      		push r28
 192               	.LCFI6:
 193               		.cfi_def_cfa_offset 5
 194               		.cfi_offset 28, -4
 195 00d0 DF93      		push r29
 196               	.LCFI7:
 197               		.cfi_def_cfa_offset 6
 198               		.cfi_offset 29, -5
 199               	/* prologue: function */
 200               	/* frame size = 0 */
 201               	/* stack size = 4 */
 202               	.L__stack_usage = 4
 203 00d2 EC01      		movw r28,r24
 204               	.LVL16:
 123:at90can_get_message.c **** 	bool found = false;
 124:at90can_get_message.c **** 	uint8_t mob;
 125:at90can_get_message.c **** 	
 126:at90can_get_message.c **** 	// check if there is any waiting message
 127:at90can_get_message.c **** 	if (!at90can_check_message())
 205               		.loc 1 127 0
 206 00d4 0E94 0000 		call can_check_message
 207               	.LVL17:
 208 00d8 8111      		cpse r24,__zero_reg__
 209 00da 00C0      		rjmp .L10
 210               	.L13:
 128:at90can_get_message.c **** 		return 0;
 211               		.loc 1 128 0
 212 00dc 80E0      		ldi r24,0
 213 00de 00C0      		rjmp .L11
 214               	.L10:
 127:at90can_get_message.c **** 	if (!at90can_check_message())
 215               		.loc 1 127 0
 216 00e0 10E0      		ldi r17,0
 217               	.L14:
 218               	.LVL18:
 129:at90can_get_message.c **** 	
 130:at90can_get_message.c **** 	// find the MOb with the received message
 131:at90can_get_message.c **** 	for (mob = 0; mob < MESSAGE_OBJECTS; mob++)
 132:at90can_get_message.c **** 	{
 133:at90can_get_message.c **** 		CANPAGE = mob << 4;
 219               		.loc 1 133 0
 220 00e2 812F      		mov r24,r17
 221 00e4 8295      		swap r24
 222 00e6 807F      		andi r24,lo8(-16)
 223 00e8 8093 ED00 		sts 237,r24
 134:at90can_get_message.c **** 		
 135:at90can_get_message.c **** 		if (CANSTMOB & (1<<RXOK))
 224               		.loc 1 135 0
 225 00ec 8091 EE00 		lds r24,238
 226 00f0 01E0      		ldi r16,lo8(1)
 227 00f2 010F      		add r16,r17
 228 00f4 85FF      		sbrs r24,5
 229 00f6 00C0      		rjmp .L12
 230               	.LVL19:
 136:at90can_get_message.c **** 		{
 137:at90can_get_message.c **** 			found = true;
 138:at90can_get_message.c **** 			
 139:at90can_get_message.c **** 			// clear flags
 140:at90can_get_message.c **** 			CANSTMOB &= 0;
 231               		.loc 1 140 0
 232 00f8 8091 EE00 		lds r24,238
 233 00fc 1092 EE00 		sts 238,__zero_reg__
 141:at90can_get_message.c **** 			break;
 142:at90can_get_message.c **** 		}
 143:at90can_get_message.c **** 	}
 144:at90can_get_message.c **** 	
 145:at90can_get_message.c **** 	if (!found)
 146:at90can_get_message.c **** 		return 0;		// should never happen
 147:at90can_get_message.c **** 
 148:at90can_get_message.c **** 	at90can_copy_mob_to_message( msg );
 234               		.loc 1 148 0
 235 0100 CE01      		movw r24,r28
 236 0102 0E94 0000 		call at90can_copy_mob_to_message
 237               	.LVL20:
 149:at90can_get_message.c **** 	
 150:at90can_get_message.c **** 	#if CAN_RX_BUFFER_SIZE == 0
 151:at90can_get_message.c **** 	// mark message as processed
 152:at90can_get_message.c **** 	ENTER_CRITICAL_SECTION;
 153:at90can_get_message.c **** 	_messages_waiting--;
 154:at90can_get_message.c **** 	LEAVE_CRITICAL_SECTION;
 155:at90can_get_message.c **** 	#endif
 156:at90can_get_message.c **** 	
 157:at90can_get_message.c **** 	// re-enable interrupts
 158:at90can_get_message.c **** 	_enable_mob_interrupt( mob );
 238               		.loc 1 158 0
 239 0106 812F      		mov r24,r17
 240 0108 0E94 0000 		call _enable_mob_interrupt
 241               	.LVL21:
 159:at90can_get_message.c **** 	
 160:at90can_get_message.c **** 	// clear flags
 161:at90can_get_message.c **** 	CANCDMOB = (1 << CONMOB1) | (CANCDMOB & (1 << IDE));
 242               		.loc 1 161 0
 243 010c 9091 EF00 		lds r25,239
 244 0110 9071      		andi r25,lo8(16)
 245 0112 9068      		ori r25,lo8(-128)
 246 0114 9093 EF00 		sts 239,r25
 162:at90can_get_message.c **** 	
 163:at90can_get_message.c **** 	return (mob + 1);
 247               		.loc 1 163 0
 248 0118 802F      		mov r24,r16
 249 011a 00C0      		rjmp .L11
 250               	.LVL22:
 251               	.L12:
 131:at90can_get_message.c **** 	for (mob = 0; mob < MESSAGE_OBJECTS; mob++)
 252               		.loc 1 131 0
 253 011c 102F      		mov r17,r16
 254               	.LVL23:
 255 011e 0630      		cpi r16,lo8(6)
 256 0120 01F4      		brne .L14
 257               	.LVL24:
 258 0122 00C0      		rjmp .L13
 259               	.LVL25:
 260               	.L11:
 261               	/* epilogue start */
 164:at90can_get_message.c **** }
 262               		.loc 1 164 0
 263 0124 DF91      		pop r29
 264 0126 CF91      		pop r28
 265               	.LVL26:
 266 0128 1F91      		pop r17
 267 012a 0F91      		pop r16
 268 012c 0895      		ret
 269               		.cfi_endproc
 270               	.LFE19:
 272               	.Letext0:
 273               		.file 2 "/usr/lib/avr/include/stdint.h"
 274               		.file 3 "can.h"
 275               		.file 4 "at90can_private.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 at90can_get_message.c
     /tmp/ccvRHYfu.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccvRHYfu.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccvRHYfu.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccvRHYfu.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccvRHYfu.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccvRHYfu.s:12     .text:0000000000000000 at90can_copy_mob_to_message
     /tmp/ccvRHYfu.s:178    .text:00000000000000ca at90can_get_message

UNDEFINED SYMBOLS
can_check_message
_enable_mob_interrupt
