   1               		.file	"at90can_get_dyn_filter.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               	.global	can_get_filter
  12               	can_get_filter:
  13               	.LFB18:
  14               		.file 1 "at90can_get_dyn_filter.c"
   1:at90can_get_dyn_filter.c **** // ----------------------------------------------------------------------------
   2:at90can_get_dyn_filter.c **** /*
   3:at90can_get_dyn_filter.c ****  * Copyright (c) 2007 Fabian Greif, Roboterclub Aachen e.V.
   4:at90can_get_dyn_filter.c ****  *  All rights reserved.
   5:at90can_get_dyn_filter.c ****  *
   6:at90can_get_dyn_filter.c ****  * Redistribution and use in source and binary forms, with or without
   7:at90can_get_dyn_filter.c ****  * modification, are permitted provided that the following conditions
   8:at90can_get_dyn_filter.c ****  * are met:
   9:at90can_get_dyn_filter.c ****  * 1. Redistributions of source code must retain the above copyright
  10:at90can_get_dyn_filter.c ****  *    notice, this list of conditions and the following disclaimer.
  11:at90can_get_dyn_filter.c ****  * 2. Redistributions in binary form must reproduce the above copyright
  12:at90can_get_dyn_filter.c ****  *    notice, this list of conditions and the following disclaimer in the
  13:at90can_get_dyn_filter.c ****  *    documentation and/or other materials provided with the distribution.
  14:at90can_get_dyn_filter.c ****  *
  15:at90can_get_dyn_filter.c ****  * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
  16:at90can_get_dyn_filter.c ****  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  17:at90can_get_dyn_filter.c ****  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  18:at90can_get_dyn_filter.c ****  * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
  19:at90can_get_dyn_filter.c ****  * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  20:at90can_get_dyn_filter.c ****  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
  21:at90can_get_dyn_filter.c ****  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  22:at90can_get_dyn_filter.c ****  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  23:at90can_get_dyn_filter.c ****  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
  24:at90can_get_dyn_filter.c ****  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
  25:at90can_get_dyn_filter.c ****  * SUCH DAMAGE.
  26:at90can_get_dyn_filter.c ****  *
  27:at90can_get_dyn_filter.c ****  * $Id: at90can_get_dyn_filter.c 6837 2008-11-16 19:05:15Z fabian $
  28:at90can_get_dyn_filter.c ****  */
  29:at90can_get_dyn_filter.c **** // ----------------------------------------------------------------------------
  30:at90can_get_dyn_filter.c **** 
  31:at90can_get_dyn_filter.c **** #include "at90can_private.h"
  32:at90can_get_dyn_filter.c **** #ifdef	SUPPORT_FOR_AT90CAN__
  33:at90can_get_dyn_filter.c **** 
  34:at90can_get_dyn_filter.c **** // ----------------------------------------------------------------------------
  35:at90can_get_dyn_filter.c **** 
  36:at90can_get_dyn_filter.c **** uint8_t at90can_get_filter(uint8_t number, can_filter_t *filter)
  37:at90can_get_dyn_filter.c **** {
  15               		.loc 1 37 0
  16               		.cfi_startproc
  17               	.LVL0:
  18 0000 0F93      		push r16
  19               	.LCFI0:
  20               		.cfi_def_cfa_offset 3
  21               		.cfi_offset 16, -2
  22 0002 1F93      		push r17
  23               	.LCFI1:
  24               		.cfi_def_cfa_offset 4
  25               		.cfi_offset 17, -3
  26 0004 CF93      		push r28
  27               	.LCFI2:
  28               		.cfi_def_cfa_offset 5
  29               		.cfi_offset 28, -4
  30               	/* prologue: function */
  31               	/* frame size = 0 */
  32               	/* stack size = 3 */
  33               	.L__stack_usage = 3
  34 0006 FB01      		movw r30,r22
  38:at90can_get_dyn_filter.c **** 	if (number > (MESSAGE_OBJECTS - 1)) {
  35               		.loc 1 38 0
  36 0008 8630      		cpi r24,lo8(6)
  37 000a 00F0      		brlo .+2
  38 000c 00C0      		rjmp .L9
  39:at90can_get_dyn_filter.c **** 		// it is only possible to serve a maximum of MESSAGE_OBJECTS filters
  40:at90can_get_dyn_filter.c **** 		return 0;
  41:at90can_get_dyn_filter.c **** 	}
  42:at90can_get_dyn_filter.c **** 	
  43:at90can_get_dyn_filter.c **** 	// load corresponding MOb page
  44:at90can_get_dyn_filter.c **** 	CANPAGE = number << 4;
  39               		.loc 1 44 0
  40 000e 8295      		swap r24
  41               	.LVL1:
  42 0010 807F      		andi r24,lo8(-16)
  43 0012 8093 ED00 		sts 237,r24
  45:at90can_get_dyn_filter.c **** 	
  46:at90can_get_dyn_filter.c **** 	if ((CANCDMOB & 0xc0) == 0) {
  44               		.loc 1 46 0
  45 0016 8091 EF00 		lds r24,239
  46 001a 807C      		andi r24,lo8(-64)
  47 001c 01F4      		brne .+2
  48 001e 00C0      		rjmp .L10
  47:at90can_get_dyn_filter.c **** 		// MOb is currently not used.
  48:at90can_get_dyn_filter.c **** 		return 2;
  49:at90can_get_dyn_filter.c **** 	}
  50:at90can_get_dyn_filter.c **** 	else if ((CANCDMOB & 0xc0) == (1 << CONMOB1))
  49               		.loc 1 50 0
  50 0020 8091 EF00 		lds r24,239
  51 0024 807C      		andi r24,lo8(-64)
  52 0026 8038      		cpi r24,lo8(-128)
  53 0028 01F0      		breq .+2
  54 002a 00C0      		rjmp .L11
  51:at90can_get_dyn_filter.c **** 	{
  52:at90can_get_dyn_filter.c **** 		// MOb is configured to receive message => read filter.
  53:at90can_get_dyn_filter.c **** 		if (CANIDM4 & (1 << RTRMSK))
  55               		.loc 1 53 0
  56 002c 9091 F400 		lds r25,244
  57 0030 8085      		ldd r24,Z+8
  58 0032 92FF      		sbrs r25,2
  59 0034 00C0      		rjmp .L3
  54:at90can_get_dyn_filter.c **** 		{
  55:at90can_get_dyn_filter.c **** 			if (CANIDT4 & (1 << RTRMSK))
  60               		.loc 1 55 0
  61 0036 9091 F000 		lds r25,240
  62 003a 92FF      		sbrs r25,2
  63 003c 00C0      		rjmp .L4
  56:at90can_get_dyn_filter.c **** 			{
  57:at90can_get_dyn_filter.c **** 				// receive only messages with RTR-bit set
  58:at90can_get_dyn_filter.c **** 				filter->flags.rtr = 0x3;
  64               		.loc 1 58 0
  65 003e 8360      		ori r24,lo8(3)
  66 0040 00C0      		rjmp .L18
  67               	.L4:
  59:at90can_get_dyn_filter.c **** 			}
  60:at90can_get_dyn_filter.c **** 			else {
  61:at90can_get_dyn_filter.c **** 				filter->flags.rtr = 0x2;
  68               		.loc 1 61 0
  69 0042 8C7F      		andi r24,lo8(-4)
  70 0044 8260      		ori r24,lo8(2)
  71 0046 00C0      		rjmp .L18
  72               	.L3:
  62:at90can_get_dyn_filter.c **** 			}
  63:at90can_get_dyn_filter.c **** 		}
  64:at90can_get_dyn_filter.c **** 		else {
  65:at90can_get_dyn_filter.c **** 			// receive all message, independent from RTR-bit
  66:at90can_get_dyn_filter.c **** 			filter->flags.rtr = 0;
  73               		.loc 1 66 0
  74 0048 8C7F      		andi r24,lo8(-4)
  75               	.L18:
  76 004a 8087      		std Z+8,r24
  67:at90can_get_dyn_filter.c **** 		}
  68:at90can_get_dyn_filter.c **** 		
  69:at90can_get_dyn_filter.c **** 		#if SUPPORT_EXTENDED_CANID
  70:at90can_get_dyn_filter.c **** 		
  71:at90can_get_dyn_filter.c **** 		if ((CANIDM4 & (1 << IDEMSK)) && (CANCDMOB & (1 << IDE)))
  77               		.loc 1 71 0
  78 004c 9091 F400 		lds r25,244
  79 0050 8085      		ldd r24,Z+8
  80 0052 90FF      		sbrs r25,0
  81 0054 00C0      		rjmp .L6
  82               		.loc 1 71 0 is_stmt 0 discriminator 1
  83 0056 9091 EF00 		lds r25,239
  84 005a 94FF      		sbrs r25,4
  85 005c 00C0      		rjmp .L6
  86               	.LBB2:
  72:at90can_get_dyn_filter.c **** 		{
  73:at90can_get_dyn_filter.c **** 			filter->flags.extended = 0x3;
  87               		.loc 1 73 0 is_stmt 1
  88 005e 8C60      		ori r24,lo8(12)
  89 0060 8087      		std Z+8,r24
  74:at90can_get_dyn_filter.c **** 			
  75:at90can_get_dyn_filter.c **** 			// extended id
  76:at90can_get_dyn_filter.c **** 			uint32_t mask;
  77:at90can_get_dyn_filter.c **** 			mask  = (uint8_t)  CANIDM4 >> 3;
  90               		.loc 1 77 0
  91 0062 9091 F400 		lds r25,244
  92 0066 9695      		lsr r25
  93 0068 9695      		lsr r25
  94 006a 9695      		lsr r25
  95               	.LVL2:
  78:at90can_get_dyn_filter.c **** 			mask |= (uint16_t) CANIDM3 << 5;
  96               		.loc 1 78 0
  97 006c 2091 F500 		lds r18,245
  98               	.LVL3:
  79:at90can_get_dyn_filter.c **** 			mask |= (uint32_t) CANIDM2 << 13;
  99               		.loc 1 79 0
 100 0070 4091 F600 		lds r20,246
 101               	.LVL4:
  80:at90can_get_dyn_filter.c **** 			mask |= (uint32_t) CANIDM1 << 21;
 102               		.loc 1 80 0
 103 0074 8091 F700 		lds r24,247
  79:at90can_get_dyn_filter.c **** 			mask |= (uint32_t) CANIDM2 << 13;
 104               		.loc 1 79 0
 105 0078 50E0      		ldi r21,0
 106 007a 60E0      		ldi r22,0
 107 007c 70E0      		ldi r23,0
 108               	.LVL5:
 109 007e 3DE0      		ldi r19,13
 110               		1:
 111 0080 440F      		lsl r20
 112 0082 551F      		rol r21
 113 0084 661F      		rol r22
 114 0086 771F      		rol r23
 115 0088 3A95      		dec r19
 116 008a 01F4      		brne 1b
 117               	.LVL6:
  78:at90can_get_dyn_filter.c **** 			mask |= (uint16_t) CANIDM3 << 5;
 118               		.loc 1 78 0
 119 008c 492B      		or r20,r25
 120               		.loc 1 80 0
 121 008e 90E0      		ldi r25,0
 122 0090 A0E0      		ldi r26,0
 123 0092 B0E0      		ldi r27,0
 124 0094 C5E1      		ldi r28,21
 125               		1:
 126 0096 880F      		lsl r24
 127 0098 991F      		rol r25
 128 009a AA1F      		rol r26
 129 009c BB1F      		rol r27
 130 009e CA95      		dec r28
 131 00a0 01F4      		brne 1b
  79:at90can_get_dyn_filter.c **** 			mask |= (uint32_t) CANIDM2 << 13;
 132               		.loc 1 79 0
 133 00a2 482B      		or r20,r24
 134 00a4 592B      		or r21,r25
 135 00a6 6A2B      		or r22,r26
 136 00a8 7B2B      		or r23,r27
  78:at90can_get_dyn_filter.c **** 			mask |= (uint16_t) CANIDM3 << 5;
 137               		.loc 1 78 0
 138 00aa 30E2      		ldi r19,lo8(32)
 139 00ac 239F      		mul r18,r19
 140 00ae C001      		movw r24,r0
 141 00b0 1124      		clr __zero_reg__
 142 00b2 A0E0      		ldi r26,0
 143 00b4 B0E0      		ldi r27,0
 144               		.loc 1 80 0
 145 00b6 482B      		or r20,r24
 146 00b8 592B      		or r21,r25
 147 00ba 6A2B      		or r22,r26
 148 00bc 7B2B      		or r23,r27
 149               	.LVL7:
  81:at90can_get_dyn_filter.c **** 			
  82:at90can_get_dyn_filter.c **** 			filter->mask = mask;
 150               		.loc 1 82 0
 151 00be 4483      		std Z+4,r20
 152 00c0 5583      		std Z+5,r21
 153 00c2 6683      		std Z+6,r22
 154 00c4 7783      		std Z+7,r23
  83:at90can_get_dyn_filter.c **** 			
  84:at90can_get_dyn_filter.c **** 			uint32_t id;
  85:at90can_get_dyn_filter.c **** 			id  = (uint8_t)  CANIDT4 >> 3;
 155               		.loc 1 85 0
 156 00c6 2091 F000 		lds r18,240
 157 00ca 2695      		lsr r18
 158 00cc 2695      		lsr r18
 159 00ce 2695      		lsr r18
 160               	.LVL8:
  86:at90can_get_dyn_filter.c **** 			id |= (uint16_t) CANIDT3 << 5;
 161               		.loc 1 86 0
 162 00d0 C091 F100 		lds r28,241
 163               	.LVL9:
  87:at90can_get_dyn_filter.c **** 			id |= (uint32_t) CANIDT2 << 13;
 164               		.loc 1 87 0
 165 00d4 8091 F200 		lds r24,242
 166               	.LVL10:
  88:at90can_get_dyn_filter.c **** 			id |= (uint32_t) CANIDT1 << 21;
 167               		.loc 1 88 0
 168 00d8 0091 F300 		lds r16,243
  87:at90can_get_dyn_filter.c **** 			id |= (uint32_t) CANIDT2 << 13;
 169               		.loc 1 87 0
 170 00dc 90E0      		ldi r25,0
 171 00de A0E0      		ldi r26,0
 172 00e0 B0E0      		ldi r27,0
 173 00e2 1DE0      		ldi r17,13
 174               		1:
 175 00e4 880F      		lsl r24
 176 00e6 991F      		rol r25
 177 00e8 AA1F      		rol r26
 178 00ea BB1F      		rol r27
 179 00ec 1A95      		dec r17
 180 00ee 01F4      		brne 1b
 181               	.LVL11:
  86:at90can_get_dyn_filter.c **** 			id |= (uint16_t) CANIDT3 << 5;
 182               		.loc 1 86 0
 183 00f0 822B      		or r24,r18
 184               		.loc 1 88 0
 185 00f2 10E0      		ldi r17,0
 186 00f4 20E0      		ldi r18,0
 187 00f6 30E0      		ldi r19,0
 188 00f8 0F2E      		mov r0,r31
 189 00fa F5E1      		ldi r31,21
 190               		1:
 191 00fc 000F      		lsl r16
 192 00fe 111F      		rol r17
 193 0100 221F      		rol r18
 194 0102 331F      		rol r19
 195 0104 FA95      		dec r31
 196 0106 01F4      		brne 1b
 197 0108 F02D      		mov r31,r0
  87:at90can_get_dyn_filter.c **** 			id |= (uint32_t) CANIDT2 << 13;
 198               		.loc 1 87 0
 199 010a 802B      		or r24,r16
 200 010c 912B      		or r25,r17
 201 010e A22B      		or r26,r18
 202 0110 B32B      		or r27,r19
 203               	.LVL12:
  86:at90can_get_dyn_filter.c **** 			id |= (uint16_t) CANIDT3 << 5;
 204               		.loc 1 86 0
 205 0112 20E2      		ldi r18,lo8(32)
 206 0114 C29F      		mul r28,r18
 207 0116 8001      		movw r16,r0
 208 0118 1124      		clr __zero_reg__
 209 011a 20E0      		ldi r18,0
 210 011c 30E0      		ldi r19,0
 211               		.loc 1 88 0
 212 011e 802B      		or r24,r16
 213 0120 912B      		or r25,r17
 214 0122 A22B      		or r26,r18
 215 0124 B32B      		or r27,r19
 216               	.LVL13:
  89:at90can_get_dyn_filter.c **** 			
  90:at90can_get_dyn_filter.c **** 			// only the bits set in the mask are vaild for the id
  91:at90can_get_dyn_filter.c **** 			filter->id = id & mask;
 217               		.loc 1 91 0
 218 0126 8423      		and r24,r20
 219 0128 9523      		and r25,r21
 220 012a A623      		and r26,r22
 221 012c B723      		and r27,r23
 222 012e 00C0      		rjmp .L19
 223               	.LVL14:
 224               	.L6:
 225               	.LBE2:
 226               	.LBB3:
  92:at90can_get_dyn_filter.c **** 		}
  93:at90can_get_dyn_filter.c **** 		else {
  94:at90can_get_dyn_filter.c **** 			if (CANIDM4 & (1 << IDEMSK)) {
 227               		.loc 1 94 0
 228 0130 9091 F400 		lds r25,244
  95:at90can_get_dyn_filter.c **** 				filter->flags.extended = 0x2;
 229               		.loc 1 95 0
 230 0134 837F      		andi r24,lo8(-13)
  94:at90can_get_dyn_filter.c **** 			if (CANIDM4 & (1 << IDEMSK)) {
 231               		.loc 1 94 0
 232 0136 90FD      		sbrc r25,0
 233               		.loc 1 95 0
 234 0138 8860      		ori r24,lo8(8)
 235               	.L7:
  96:at90can_get_dyn_filter.c **** 			} else {
  97:at90can_get_dyn_filter.c **** 				filter->flags.extended = 0;
 236               		.loc 1 97 0
 237 013a 8087      		std Z+8,r24
  98:at90can_get_dyn_filter.c **** 			}
  99:at90can_get_dyn_filter.c **** 			
 100:at90can_get_dyn_filter.c **** 			uint16_t mask;
 101:at90can_get_dyn_filter.c **** 			mask  = (uint8_t)  CANIDM2 >> 5;
 238               		.loc 1 101 0
 239 013c 8091 F600 		lds r24,246
 240 0140 8295      		swap r24
 241 0142 8695      		lsr r24
 242 0144 8770      		andi r24,lo8(7)
 243               	.LVL15:
 102:at90can_get_dyn_filter.c **** 			mask |= (uint16_t) CANIDM1 << 3;
 244               		.loc 1 102 0
 245 0146 2091 F700 		lds r18,247
 246 014a 58E0      		ldi r21,lo8(8)
 247 014c 259F      		mul r18,r21
 248 014e 9001      		movw r18,r0
 249 0150 1124      		clr __zero_reg__
 250 0152 282B      		or r18,r24
 251               	.LVL16:
 103:at90can_get_dyn_filter.c **** 			
 104:at90can_get_dyn_filter.c **** 			filter->mask = mask;
 252               		.loc 1 104 0
 253 0154 C901      		movw r24,r18
 254 0156 A0E0      		ldi r26,0
 255 0158 B0E0      		ldi r27,0
 256 015a 8483      		std Z+4,r24
 257 015c 9583      		std Z+5,r25
 258 015e A683      		std Z+6,r26
 259 0160 B783      		std Z+7,r27
 105:at90can_get_dyn_filter.c **** 			
 106:at90can_get_dyn_filter.c **** 			uint16_t id;
 107:at90can_get_dyn_filter.c **** 			id  = (uint8_t)  CANIDT2 >> 5;
 260               		.loc 1 107 0
 261 0162 4091 F200 		lds r20,242
 262 0166 4295      		swap r20
 263 0168 4695      		lsr r20
 264 016a 4770      		andi r20,lo8(7)
 265               	.LVL17:
 108:at90can_get_dyn_filter.c **** 			id |= (uint16_t) CANIDT1 << 3;
 266               		.loc 1 108 0
 267 016c 8091 F300 		lds r24,243
 268               	.LVL18:
 269 0170 58E0      		ldi r21,lo8(8)
 270 0172 859F      		mul r24,r21
 271 0174 C001      		movw r24,r0
 272 0176 1124      		clr __zero_reg__
 273               	.LVL19:
 274 0178 842B      		or r24,r20
 109:at90can_get_dyn_filter.c **** 			
 110:at90can_get_dyn_filter.c **** 			filter->id = id & mask;
 275               		.loc 1 110 0
 276 017a 8223      		and r24,r18
 277 017c 9323      		and r25,r19
 278 017e A0E0      		ldi r26,0
 279 0180 B0E0      		ldi r27,0
 280               	.LVL20:
 281               	.L19:
 282 0182 8083      		st Z,r24
 283 0184 9183      		std Z+1,r25
 284 0186 A283      		std Z+2,r26
 285 0188 B383      		std Z+3,r27
 286               	.LBE3:
 111:at90can_get_dyn_filter.c **** 		}
 112:at90can_get_dyn_filter.c **** 		
 113:at90can_get_dyn_filter.c **** 		#else
 114:at90can_get_dyn_filter.c **** 		
 115:at90can_get_dyn_filter.c **** 		uint16_t mask;
 116:at90can_get_dyn_filter.c **** 		mask  = (uint8_t)  CANIDM2 >> 5;
 117:at90can_get_dyn_filter.c **** 		mask |= (uint16_t) CANIDM1 << 3;
 118:at90can_get_dyn_filter.c **** 		
 119:at90can_get_dyn_filter.c **** 		filter->mask = mask;
 120:at90can_get_dyn_filter.c **** 		
 121:at90can_get_dyn_filter.c **** 		uint16_t id;
 122:at90can_get_dyn_filter.c **** 		id  = (uint8_t)  CANIDT2 >> 5;
 123:at90can_get_dyn_filter.c **** 		id |= (uint16_t) CANIDT1 << 3;
 124:at90can_get_dyn_filter.c **** 		
 125:at90can_get_dyn_filter.c **** 		filter->id = id & mask;
 126:at90can_get_dyn_filter.c **** 		
 127:at90can_get_dyn_filter.c **** 		#endif
 128:at90can_get_dyn_filter.c **** 		
 129:at90can_get_dyn_filter.c **** 		return 1;
 287               		.loc 1 129 0
 288 018a 81E0      		ldi r24,lo8(1)
 289 018c 00C0      		rjmp .L2
 290               	.LVL21:
 291               	.L9:
  40:at90can_get_dyn_filter.c **** 		return 0;
 292               		.loc 1 40 0
 293 018e 80E0      		ldi r24,0
 294               	.LVL22:
 295 0190 00C0      		rjmp .L2
 296               	.L10:
  48:at90can_get_dyn_filter.c **** 		return 2;
 297               		.loc 1 48 0
 298 0192 82E0      		ldi r24,lo8(2)
 299 0194 00C0      		rjmp .L2
 300               	.L11:
 130:at90can_get_dyn_filter.c **** 	}
 131:at90can_get_dyn_filter.c **** 	
 132:at90can_get_dyn_filter.c **** 	// MOb is currently used to transmit a message.
 133:at90can_get_dyn_filter.c **** 	return 0xff;
 301               		.loc 1 133 0
 302 0196 8FEF      		ldi r24,lo8(-1)
 303               	.LVL23:
 304               	.L2:
 305               	/* epilogue start */
 134:at90can_get_dyn_filter.c **** }
 306               		.loc 1 134 0
 307 0198 CF91      		pop r28
 308 019a 1F91      		pop r17
 309 019c 0F91      		pop r16
 310 019e 0895      		ret
 311               		.cfi_endproc
 312               	.LFE18:
 314               	.Letext0:
 315               		.file 2 "/usr/lib/avr/include/stdint.h"
 316               		.file 3 "can.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 at90can_get_dyn_filter.c
     /tmp/ccvIaNam.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccvIaNam.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccvIaNam.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccvIaNam.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccvIaNam.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccvIaNam.s:12     .text:0000000000000000 can_get_filter

NO UNDEFINED SYMBOLS
