   1               		.file	"at90can_disable_dyn_filter.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               	.global	can_disable_filter
  12               	can_disable_filter:
  13               	.LFB18:
  14               		.file 1 "at90can_disable_dyn_filter.c"
   1:at90can_disable_dyn_filter.c **** // ----------------------------------------------------------------------------
   2:at90can_disable_dyn_filter.c **** /*
   3:at90can_disable_dyn_filter.c ****  * Copyright (c) 2007 Fabian Greif, Roboterclub Aachen e.V.
   4:at90can_disable_dyn_filter.c ****  *  All rights reserved.
   5:at90can_disable_dyn_filter.c ****  *
   6:at90can_disable_dyn_filter.c ****  * Redistribution and use in source and binary forms, with or without
   7:at90can_disable_dyn_filter.c ****  * modification, are permitted provided that the following conditions
   8:at90can_disable_dyn_filter.c ****  * are met:
   9:at90can_disable_dyn_filter.c ****  * 1. Redistributions of source code must retain the above copyright
  10:at90can_disable_dyn_filter.c ****  *    notice, this list of conditions and the following disclaimer.
  11:at90can_disable_dyn_filter.c ****  * 2. Redistributions in binary form must reproduce the above copyright
  12:at90can_disable_dyn_filter.c ****  *    notice, this list of conditions and the following disclaimer in the
  13:at90can_disable_dyn_filter.c ****  *    documentation and/or other materials provided with the distribution.
  14:at90can_disable_dyn_filter.c ****  *
  15:at90can_disable_dyn_filter.c ****  * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
  16:at90can_disable_dyn_filter.c ****  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  17:at90can_disable_dyn_filter.c ****  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  18:at90can_disable_dyn_filter.c ****  * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
  19:at90can_disable_dyn_filter.c ****  * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  20:at90can_disable_dyn_filter.c ****  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
  21:at90can_disable_dyn_filter.c ****  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  22:at90can_disable_dyn_filter.c ****  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  23:at90can_disable_dyn_filter.c ****  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
  24:at90can_disable_dyn_filter.c ****  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
  25:at90can_disable_dyn_filter.c ****  * SUCH DAMAGE.
  26:at90can_disable_dyn_filter.c ****  *
  27:at90can_disable_dyn_filter.c ****  * $Id: at90can_disable_dyn_filter.c 6721 2008-10-02 16:09:53Z fabian $
  28:at90can_disable_dyn_filter.c ****  */
  29:at90can_disable_dyn_filter.c **** // ----------------------------------------------------------------------------
  30:at90can_disable_dyn_filter.c **** 
  31:at90can_disable_dyn_filter.c **** #include "at90can_private.h"
  32:at90can_disable_dyn_filter.c **** #ifdef	SUPPORT_FOR_AT90CAN__
  33:at90can_disable_dyn_filter.c **** 
  34:at90can_disable_dyn_filter.c **** // ----------------------------------------------------------------------------
  35:at90can_disable_dyn_filter.c **** // disable mob
  36:at90can_disable_dyn_filter.c **** 
  37:at90can_disable_dyn_filter.c **** bool at90can_disable_filter(uint8_t number)
  38:at90can_disable_dyn_filter.c **** {
  15               		.loc 1 38 0
  16               		.cfi_startproc
  17               	.LVL0:
  18               	/* prologue: function */
  19               	/* frame size = 0 */
  20               	/* stack size = 0 */
  21               	.L__stack_usage = 0
  39:at90can_disable_dyn_filter.c **** 	if (number > (MESSAGE_OBJECTS - 1))
  22               		.loc 1 39 0
  23 0000 8630      		cpi r24,lo8(6)
  24 0002 00F0      		brlo .L2
  40:at90can_disable_dyn_filter.c **** 	{
  41:at90can_disable_dyn_filter.c **** 		if (number == CAN_ALL_FILTER)
  25               		.loc 1 41 0
  26 0004 8F3F      		cpi r24,lo8(-1)
  27 0006 01F0      		breq .+2
  28 0008 00C0      		rjmp .L13
  42:at90can_disable_dyn_filter.c **** 		{
  43:at90can_disable_dyn_filter.c **** 			// disable interrupts
  44:at90can_disable_dyn_filter.c **** 			CANIE1 = 0;
  29               		.loc 1 44 0
  30 000a 1092 DF00 		sts 223,__zero_reg__
  45:at90can_disable_dyn_filter.c **** 			CANIE2 = 0;
  31               		.loc 1 45 0
  32 000e 1092 DE00 		sts 222,__zero_reg__
  33               	.LVL1:
  34               	.LBB8:
  46:at90can_disable_dyn_filter.c **** 			
  47:at90can_disable_dyn_filter.c **** 			// disable all MObs
  48:at90can_disable_dyn_filter.c **** 			for (uint8_t i = 0; i < MESSAGE_OBJECTS; i++) {
  35               		.loc 1 48 0
  36 0012 80E0      		ldi r24,0
  37               	.LVL2:
  38               	.L5:
  49:at90can_disable_dyn_filter.c **** 				CANPAGE = (i << 4);
  39               		.loc 1 49 0 discriminator 2
  40 0014 982F      		mov r25,r24
  41 0016 9295      		swap r25
  42 0018 907F      		andi r25,lo8(-16)
  43 001a 9093 ED00 		sts 237,r25
  50:at90can_disable_dyn_filter.c **** 				
  51:at90can_disable_dyn_filter.c **** 				// disable MOb (read-write required)
  52:at90can_disable_dyn_filter.c **** 				CANCDMOB &= 0;
  44               		.loc 1 52 0 discriminator 2
  45 001e 9091 EF00 		lds r25,239
  46 0022 1092 EF00 		sts 239,__zero_reg__
  53:at90can_disable_dyn_filter.c **** 				CANSTMOB &= 0;
  47               		.loc 1 53 0 discriminator 2
  48 0026 9091 EE00 		lds r25,238
  49 002a 1092 EE00 		sts 238,__zero_reg__
  48:at90can_disable_dyn_filter.c **** 			for (uint8_t i = 0; i < MESSAGE_OBJECTS; i++) {
  50               		.loc 1 48 0 discriminator 2
  51 002e 8F5F      		subi r24,lo8(-(1))
  52               	.LVL3:
  53 0030 8630      		cpi r24,lo8(6)
  54 0032 01F4      		brne .L5
  55               	.LBE8:
  54:at90can_disable_dyn_filter.c **** 			}
  55:at90can_disable_dyn_filter.c **** 			
  56:at90can_disable_dyn_filter.c **** 			// mark all MObs as free
  57:at90can_disable_dyn_filter.c **** 			#if CAN_RX_BUFFER_SIZE == 0
  58:at90can_disable_dyn_filter.c **** 			_messages_waiting = 0;
  59:at90can_disable_dyn_filter.c **** 			#endif
  60:at90can_disable_dyn_filter.c **** 			
  61:at90can_disable_dyn_filter.c **** 			#if CAN_TX_BUFFER_SIZE == 0
  62:at90can_disable_dyn_filter.c **** 			_free_buffer = MESSAGE_OBJECTS;
  56               		.loc 1 62 0
  57 0034 8093 0000 		sts _free_buffer,r24
  58 0038 00C0      		rjmp .L14
  59               	.LVL4:
  60               	.L2:
  61               	.LBB9:
  62               	.LBB10:
  63               		.file 2 "at90can_private.h"
   1:at90can_private.h **** // ----------------------------------------------------------------------------
   2:at90can_private.h **** /*
   3:at90can_private.h ****  * Copyright (c) 2007 Fabian Greif, Roboterclub Aachen e.V.
   4:at90can_private.h ****  *  All rights reserved.
   5:at90can_private.h ****  *
   6:at90can_private.h ****  * Redistribution and use in source and binary forms, with or without
   7:at90can_private.h ****  * modification, are permitted provided that the following conditions
   8:at90can_private.h ****  * are met:
   9:at90can_private.h ****  * 1. Redistributions of source code must retain the above copyright
  10:at90can_private.h ****  *    notice, this list of conditions and the following disclaimer.
  11:at90can_private.h ****  * 2. Redistributions in binary form must reproduce the above copyright
  12:at90can_private.h ****  *    notice, this list of conditions and the following disclaimer in the
  13:at90can_private.h ****  *    documentation and/or other materials provided with the distribution.
  14:at90can_private.h ****  *
  15:at90can_private.h ****  * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
  16:at90can_private.h ****  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  17:at90can_private.h ****  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  18:at90can_private.h ****  * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
  19:at90can_private.h ****  * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  20:at90can_private.h ****  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
  21:at90can_private.h ****  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  22:at90can_private.h ****  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  23:at90can_private.h ****  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
  24:at90can_private.h ****  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
  25:at90can_private.h ****  * SUCH DAMAGE.
  26:at90can_private.h ****  *
  27:at90can_private.h ****  * $Id: at90can_private.h 6910 2008-11-30 21:13:14Z fabian $
  28:at90can_private.h ****  */
  29:at90can_private.h **** // ----------------------------------------------------------------------------
  30:at90can_private.h **** 
  31:at90can_private.h **** #ifndef	AT90CAN_PRIVATE_H
  32:at90can_private.h **** #define	AT90CAN_PRIVATE_H
  33:at90can_private.h **** 
  34:at90can_private.h **** // ----------------------------------------------------------------------------
  35:at90can_private.h **** 
  36:at90can_private.h **** #include <avr/io.h>
  37:at90can_private.h **** #include <avr/interrupt.h>
  38:at90can_private.h **** 
  39:at90can_private.h **** #include <stdlib.h>
  40:at90can_private.h **** 
  41:at90can_private.h **** #include "can_private.h"
  42:at90can_private.h **** #include "can.h"
  43:at90can_private.h **** #include "can_buffer.h"
  44:at90can_private.h **** #include "utils.h"
  45:at90can_private.h **** 
  46:at90can_private.h **** // ----------------------------------------------------------------------------
  47:at90can_private.h **** #if (defined (__AVR_AT90CAN32__) || \
  48:at90can_private.h **** 	 defined (__AVR_AT90CAN64__) || \
  49:at90can_private.h **** 	 defined (__AVR_AT90CAN128__) || \
  50:at90can_private.h **** 	 defined (__AVR_ATmega16M1__) || \
  51:at90can_private.h **** 	 defined (__AVR_ATmega32M1__) || \
  52:at90can_private.h **** 	 defined (__AVR_ATmega64M1__) ) && \
  53:at90can_private.h **** 	 BUILD_FOR_AT90CAN == 1
  54:at90can_private.h **** 
  55:at90can_private.h **** #if (F_CPU == 16000000UL)
  56:at90can_private.h **** 	#define AT90CAN_TIMER_PRESCALE 199
  57:at90can_private.h **** # else
  58:at90can_private.h **** 	#if (F_CPU == 8000000UL)
  59:at90can_private.h **** 		#define AT90CAN_TIMER_PRESCALE 99
  60:at90can_private.h **** 	#else
  61:at90can_private.h **** 		#if (F_CPU == 4000000UL)
  62:at90can_private.h **** 			#define AT90CAN_TIMER_PRESCALE 49
  63:at90can_private.h **** 		#else
  64:at90can_private.h **** 			#error	only 4, 8 or 16 MHz for F_CPU supported!
  65:at90can_private.h **** 		#endif
  66:at90can_private.h **** 	#endif
  67:at90can_private.h **** #endif
  68:at90can_private.h **** 
  69:at90can_private.h **** 
  70:at90can_private.h **** #define	SUPPORT_FOR_AT90CAN__		1
  71:at90can_private.h **** 
  72:at90can_private.h **** #if defined (__AVR_AT90CAN32__) || \
  73:at90can_private.h **** 	defined (__AVR_AT90CAN64__) || \
  74:at90can_private.h **** 	defined (__AVR_AT90CAN128__)
  75:at90can_private.h **** 	#define AT90CAN
  76:at90can_private.h **** 	#define MESSAGE_OBJECTS 15
  77:at90can_private.h **** #endif
  78:at90can_private.h **** 
  79:at90can_private.h **** #if	defined (__AVR_ATmega16M1__) || \
  80:at90can_private.h **** 	defined (__AVR_ATmega32M1__) || \
  81:at90can_private.h **** 	defined (__AVR_ATmega64M1__)
  82:at90can_private.h **** 	#define ATmegaM
  83:at90can_private.h **** 	#define	MESSAGE_OBJECTS 6
  84:at90can_private.h **** #endif
  85:at90can_private.h **** 
  86:at90can_private.h **** // ----------------------------------------------------------------------------
  87:at90can_private.h **** 
  88:at90can_private.h **** #if CAN_RX_BUFFER_SIZE > 0
  89:at90can_private.h **** extern can_buffer_t can_rx_buffer;
  90:at90can_private.h **** #else
  91:at90can_private.h **** extern volatile uint8_t _messages_waiting;
  92:at90can_private.h **** #endif
  93:at90can_private.h **** 
  94:at90can_private.h **** #if CAN_TX_BUFFER_SIZE > 0
  95:at90can_private.h **** extern can_buffer_t can_tx_buffer;
  96:at90can_private.h **** #else
  97:at90can_private.h **** extern volatile uint8_t _free_buffer;
  98:at90can_private.h **** #endif
  99:at90can_private.h **** 
 100:at90can_private.h **** #if CAN_FORCE_TX_ORDER
 101:at90can_private.h **** extern volatile uint8_t _transmission_in_progress ;
 102:at90can_private.h **** #endif
 103:at90can_private.h **** 
 104:at90can_private.h **** // ----------------------------------------------------------------------------
 105:at90can_private.h **** extern uint8_t _find_free_mob(void);
 106:at90can_private.h **** 
 107:at90can_private.h **** // ----------------------------------------------------------------------------
 108:at90can_private.h **** extern void _disable_mob_interrupt(uint8_t mob);
 109:at90can_private.h **** 
 110:at90can_private.h **** // ----------------------------------------------------------------------------
 111:at90can_private.h **** extern void _enable_mob_interrupt(uint8_t mob);
 112:at90can_private.h **** 
 113:at90can_private.h **** 
 114:at90can_private.h **** // ----------------------------------------------------------------------------
 115:at90can_private.h **** extern uint8_t at90can_send_message(const can_t *msg);
 116:at90can_private.h **** 
 117:at90can_private.h **** // ----------------------------------------------------------------------------
 118:at90can_private.h **** extern uint8_t at90can_get_message(can_t *msg);
 119:at90can_private.h **** 
 120:at90can_private.h **** // ----------------------------------------------------------------------------
 121:at90can_private.h **** /**
 122:at90can_private.h ****  * \brief	Copy data form a message in RAM to the actual registers
 123:at90can_private.h ****  * \warning this function assumes CANPAGE to be set properly
 124:at90can_private.h ****  */
 125:at90can_private.h **** extern void at90can_copy_message_to_mob(const can_t *msg);
 126:at90can_private.h **** 
 127:at90can_private.h **** // ----------------------------------------------------------------------------
 128:at90can_private.h **** /**
 129:at90can_private.h ****  * \brief	Copy data form a message the registers to RAM
 130:at90can_private.h ****  * \warning this function assumes CANPAGE to be set properly
 131:at90can_private.h ****  */
 132:at90can_private.h **** extern void at90can_copy_mob_to_message(can_t *msg);
 133:at90can_private.h **** 
 134:at90can_private.h **** // ----------------------------------------------------------------------------
 135:at90can_private.h **** // enter standby mode => messages are not transmitted nor received
 136:at90can_private.h **** 
 137:at90can_private.h **** extern __attribute__ ((gnu_inline)) inline void _enter_standby_mode(void)
 138:at90can_private.h **** {
 139:at90can_private.h **** 	// request abort
 140:at90can_private.h **** 	CANGCON = (1 << ABRQ);
  64               		.loc 2 140 0
  65 003a 90E8      		ldi r25,lo8(-128)
  66 003c 9093 D800 		sts 216,r25
  67               	.L7:
 141:at90can_private.h **** 	
 142:at90can_private.h **** 	// wait until receiver is not busy
 143:at90can_private.h **** 	while (CANGSTA & (1 << RXBSY))
  68               		.loc 2 143 0
  69 0040 9091 D900 		lds r25,217
  70 0044 93FD      		sbrc r25,3
  71 0046 00C0      		rjmp .L7
 144:at90can_private.h **** 		;
 145:at90can_private.h **** 	
 146:at90can_private.h **** 	// request standby mode
 147:at90can_private.h **** 	CANGCON = 0;
  72               		.loc 2 147 0
  73 0048 1092 D800 		sts 216,__zero_reg__
  74               	.L9:
 148:at90can_private.h **** 	
 149:at90can_private.h **** 	// wait until the CAN Controller has entered standby mode
 150:at90can_private.h **** 	while (CANGSTA & (1 << ENFG))
  75               		.loc 2 150 0
  76 004c 9091 D900 		lds r25,217
  77 0050 92FD      		sbrc r25,2
  78 0052 00C0      		rjmp .L9
  79               	.LBE10:
  80               	.LBE9:
  63:at90can_disable_dyn_filter.c **** 			#endif
  64:at90can_disable_dyn_filter.c **** 			
  65:at90can_disable_dyn_filter.c **** 			return true;
  66:at90can_disable_dyn_filter.c **** 		}
  67:at90can_disable_dyn_filter.c **** 		
  68:at90can_disable_dyn_filter.c **** 		// it is only possible to serve a maximum of MESSAGE_OBJECTS filters
  69:at90can_disable_dyn_filter.c **** 		return false;
  70:at90can_disable_dyn_filter.c **** 	}
  71:at90can_disable_dyn_filter.c **** 	
  72:at90can_disable_dyn_filter.c **** 	// set CAN Controller to standby mode
  73:at90can_disable_dyn_filter.c **** 	_enter_standby_mode();
  74:at90can_disable_dyn_filter.c **** 	
  75:at90can_disable_dyn_filter.c **** 	CANPAGE = number << 4;
  81               		.loc 1 75 0
  82 0054 982F      		mov r25,r24
  83 0056 9295      		swap r25
  84 0058 907F      		andi r25,lo8(-16)
  85 005a 9093 ED00 		sts 237,r25
  76:at90can_disable_dyn_filter.c **** 	
  77:at90can_disable_dyn_filter.c **** 	// reset flags
  78:at90can_disable_dyn_filter.c **** 	CANSTMOB &= 0;
  86               		.loc 1 78 0
  87 005e 9091 EE00 		lds r25,238
  88 0062 1092 EE00 		sts 238,__zero_reg__
  79:at90can_disable_dyn_filter.c **** 	CANCDMOB = 0;
  89               		.loc 1 79 0
  90 0066 1092 EF00 		sts 239,__zero_reg__
  80:at90can_disable_dyn_filter.c **** 	
  81:at90can_disable_dyn_filter.c **** 	_disable_mob_interrupt(number);
  91               		.loc 1 81 0
  92 006a 0E94 0000 		call _disable_mob_interrupt
  93               	.LVL5:
  94               	.LBB11:
  95               	.LBB12:
 151:at90can_private.h **** 		;
 152:at90can_private.h **** }
 153:at90can_private.h **** 
 154:at90can_private.h **** // ----------------------------------------------------------------------------
 155:at90can_private.h **** // leave standby mode => CAN Controller is connected to CAN Bus
 156:at90can_private.h **** 
 157:at90can_private.h **** extern __attribute__ ((gnu_inline)) inline void _leave_standby_mode(void)
 158:at90can_private.h **** {
 159:at90can_private.h **** 	// save CANPAGE register
 160:at90can_private.h **** 	uint8_t canpage = CANPAGE;
  96               		.loc 2 160 0
  97 006e 9091 ED00 		lds r25,237
  98               	.LVL6:
  99               	.LBB13:
 161:at90can_private.h **** 	
 162:at90can_private.h **** 	// reenable all MObs
 163:at90can_private.h **** 	for (uint8_t i=0;i<MESSAGE_OBJECTS;i++) {
 100               		.loc 2 163 0
 101 0072 80E0      		ldi r24,0
 102               	.LVL7:
 103               	.L11:
 164:at90can_private.h **** 		CANPAGE = i << 4;
 104               		.loc 2 164 0
 105 0074 282F      		mov r18,r24
 106 0076 2295      		swap r18
 107 0078 207F      		andi r18,lo8(-16)
 108 007a 2093 ED00 		sts 237,r18
 165:at90can_private.h **** 		CANCDMOB = CANCDMOB;
 109               		.loc 2 165 0
 110 007e 2091 EF00 		lds r18,239
 111 0082 2093 EF00 		sts 239,r18
 163:at90can_private.h **** 	for (uint8_t i=0;i<MESSAGE_OBJECTS;i++) {
 112               		.loc 2 163 0
 113 0086 8F5F      		subi r24,lo8(-(1))
 114               	.LVL8:
 115 0088 8630      		cpi r24,lo8(6)
 116 008a 01F4      		brne .L11
 117               	.LBE13:
 166:at90can_private.h **** 	}
 167:at90can_private.h **** 	
 168:at90can_private.h **** 	// restore CANPAGE
 169:at90can_private.h **** 	CANPAGE = canpage;
 118               		.loc 2 169 0
 119 008c 9093 ED00 		sts 237,r25
 170:at90can_private.h **** 	
 171:at90can_private.h **** 	// request normal mode
 172:at90can_private.h **** 	CANGCON = (1 << ENASTB);
 120               		.loc 2 172 0
 121 0090 82E0      		ldi r24,lo8(2)
 122               	.LVL9:
 123 0092 8093 D800 		sts 216,r24
 124               	.L12:
 173:at90can_private.h **** 	
 174:at90can_private.h **** 	// wait until the CAN Controller has left standby mode
 175:at90can_private.h **** 	while ((CANGSTA & (1 << ENFG)) == 0)
 125               		.loc 2 175 0
 126 0096 8091 D900 		lds r24,217
 127 009a 82FF      		sbrs r24,2
 128 009c 00C0      		rjmp .L12
 129 009e 00C0      		rjmp .L14
 130               	.LVL10:
 131               	.L13:
 132               	.LBE12:
 133               	.LBE11:
  69:at90can_disable_dyn_filter.c **** 		return false;
 134               		.loc 1 69 0
 135 00a0 80E0      		ldi r24,0
 136               	.LVL11:
 137 00a2 0895      		ret
 138               	.L14:
  82:at90can_disable_dyn_filter.c **** 	
  83:at90can_disable_dyn_filter.c **** 	// re-enable CAN Controller 
  84:at90can_disable_dyn_filter.c **** 	_leave_standby_mode();
  85:at90can_disable_dyn_filter.c **** 	
  86:at90can_disable_dyn_filter.c **** 	return true;
 139               		.loc 1 86 0
 140 00a4 81E0      		ldi r24,lo8(1)
  87:at90can_disable_dyn_filter.c **** }
 141               		.loc 1 87 0
 142 00a6 0895      		ret
 143               		.cfi_endproc
 144               	.LFE18:
 146               	.Letext0:
 147               		.file 3 "/usr/lib/avr/include/stdint.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 at90can_disable_dyn_filter.c
     /tmp/ccFvgOme.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccFvgOme.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccFvgOme.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccFvgOme.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccFvgOme.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccFvgOme.s:12     .text:0000000000000000 can_disable_filter

UNDEFINED SYMBOLS
_free_buffer
_disable_mob_interrupt
